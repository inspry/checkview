name: Check WordPress Plugin Version Updates For Gravity

on:
  push:
    branches:
      - bug-fixes
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch: # Allow manual trigger

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      plugins: |
        turnstile
        akismet
        gravityforms
        recaptcha
        gf-hcaptcha
        gravityforms-zero-spam
        hcaptcha-for-forms-and-more
        simple-cloudflare-turnstile

  check-turnstile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create .revision Directory
        run: mkdir -p .revision

      - name: Get Turnstile plugin version from WordPress site
        id: get-plugin-version
        run: |
          response=$(curl -s "https://gflistener.instawp.xyz/wp-json/checkview/v1/plugin-version?_plugin_slug=turnstile")
          plugin_version=$(echo $response | jq -r '.version')

          if [ "$plugin_version" == "null" ] || [ -z "$plugin_version" ]; then
            echo "Plugin version not found for turnstile"
            exit 1
          else
            echo "Plugin version for turnstile is $plugin_version"
            echo "plugin_version=$plugin_version" >> $GITHUB_ENV

            # Save the plugin version to the current revision file
            current_revision_file=".revision/turnstile_current_revision_gravityforms.txt"
            echo "$plugin_version" > "$current_revision_file"
          fi

      - name: Get previous plugin version
        id: get-previous
        run: |
          previous_revision_file=".revision/turnstile_latest_revision_gravityforms.txt"
          if [ -f "$previous_revision_file" ]; then
            previous_revision=$(cat "$previous_revision_file")
          else
            previous_revision="0"
          fi
          echo "previous_revision=$previous_revision" >> $GITHUB_ENV

      - name: Compare revisions
        id: compare-revisions
        run: |
          current_revision=$(cat ".revision/turnstile_current_revision_gravityforms.txt")
          previous_revision=${{ env.previous_revision }}

          echo "Current revision: $current_revision"
          echo "Previous revision: $previous_revision"

          if [ "$current_revision" != "$previous_revision" ]; then
            echo "::set-output name=update_found::true"
          else
            echo "::set-output name=update_found::false"
          fi

      - name: Save current revision as latest revision
        if: steps.compare-revisions.outputs.update_found == 'true'
        run: |
          cp ".revision/turnstile_current_revision_gravityforms.txt" ".revision/turnstile_latest_revision_gravityforms.txt"

      - name: Random Sleep Before Processing
        run: |
          sleep_time=$(( RANDOM % 10 + 1 ))
          echo "Sleeping for $sleep_time seconds..."
          sleep $sleep_time

      - name: Commit updated revision file
        if: steps.compare-revisions.outputs.update_found == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Stash any unstaged changes before pulling
          git stash --include-untracked

          # Pull the latest changes from the remote branch with rebase
          git pull --rebase origin bug-fixes
          
          # Apply the stashed changes back after the pull
          git stash pop || echo "No changes to apply from stash"

          # Add the updated revision file
          git add ".revision/turnstile_latest_revision_gravityforms.txt"

          # Check if there are any changes to commit
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update turnstile SVN revision"
            
            # Try to push changes
            git push
            if [ $? -ne 0 ]; then
              echo "Push failed."
              exit 1
            fi
          else
            echo "No changes to commit."
          fi

      - name: Create Testing Site in InstaWP Turnstile
        if: steps.compare-revisions.outputs.update_found == 'true'
        uses: instawp/wordpress-testing-automation@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
          INSTAWP_TEMPLATE_SLUG: gravity-forms--turnstile-third-party
          REPO_ID: 521
          EXPIRY_HOURS: 1
          INSTAWP_ACTION: create-site-template

  check-akismet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create .revision Directory
        run: mkdir -p .revision

      - name: Get Akismet plugin version from WordPress site
        id: get-plugin-version
        run: |
          response=$(curl -s "https://gflistener.instawp.xyz/wp-json/checkview/v1/plugin-version?_plugin_slug=akismet")
          plugin_version=$(echo $response | jq -r '.version')

          if [ "$plugin_version" == "null" ] || [ -z "$plugin_version" ]; then
            echo "Plugin version not found for akismet"
            exit 1
          else
            echo "Plugin version for akismet is $plugin_version"
            echo "plugin_version=$plugin_version" >> $GITHUB_ENV

            # Save the plugin version to the current revision file
            current_revision_file=".revision/akismet_current_revision_gravityforms.txt"
            echo "$plugin_version" > "$current_revision_file"
          fi

      - name: Get previous plugin version
        id: get-previous
        run: |
          previous_revision_file=".revision/akismet_latest_revision_gravityforms.txt"
          if [ -f "$previous_revision_file" ]; then
            previous_revision=$(cat "$previous_revision_file")
          else
            previous_revision="0"
          fi
          echo "previous_revision=$previous_revision" >> $GITHUB_ENV

      - name: Compare revisions
        id: compare-revisions
        run: |
          current_revision=$(cat ".revision/akismet_current_revision_gravityforms.txt")
          previous_revision=${{ env.previous_revision }}

          echo "Current revision: $current_revision"
          echo "Previous revision: $previous_revision"

          if [ "$current_revision" != "$previous_revision" ]; then
            echo "::set-output name=update_found::true"
          else
            echo "::set-output name=update_found::false"
          fi

      - name: Save current revision as latest revision
        if: steps.compare-revisions.outputs.update_found == 'true'
        run: |
          cp ".revision/akismet_current_revision_gravityforms.txt" ".revision/akismet_latest_revision_gravityforms.txt"

      - name: Random Sleep Before Processing
        run: |
          sleep_time=$(( RANDOM % 10 + 1 ))
          echo "Sleeping for $sleep_time seconds..."
          sleep $sleep_time

      - name: Commit updated revision file
        if: steps.compare-revisions.outputs.update_found == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Stash any unstaged changes before pulling
          git stash --include-untracked

          # Pull the latest changes from the remote branch with rebase
          git pull --rebase origin bug-fixes
          
          # Apply the stashed changes back after the pull
          git stash pop || echo "No changes to apply from stash"

          # Add the updated revision file
          git add ".revision/akismet_latest_revision_gravityforms.txt"

          # Check if there are any changes to commit
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update akismet SVN revision"
            
            # Try to push changes
            git push
            if [ $? -ne 0 ]; then
              echo "Push failed."
              exit 1
            fi
          else
            echo "No changes to commit."
          fi

      - name: Create Testing Site in InstaWP
        if: steps.compare-revisions.outputs.update_found == 'true'
        uses: instawp/wordpress-testing-automation@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
          INSTAWP_TEMPLATE_SLUG: gravity-forms--akismet
          REPO_ID: 521
          EXPIRY_HOURS: 1
          INSTAWP_ACTION: create-site-template

# Repeat similar jobs for each of the other plugins:
# check-gravityforms
# check-recaptcha
# check-gf-hcaptcha
# check-gravityforms-zero-spam
# check-hcaptcha-for-forms-and-more
# check-simple-cloudflare-turnstile
