name: Check WordPress Plugin Version Updates For Gravity

on:
  push:
    branches:
      - bug-fixes
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch: # Allow manual trigger

jobs:
  check-plugin-version:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        plugin:
          - turnstile
          - akismet
          - gravityforms
          - recaptcha
          - gf-hcaptcha
          - gravityforms-zero-spam
          - hcaptcha-for-forms-and-more
          - simple-cloudflare-turnstile
          # Add more plugins here

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create .revision Directory
        run: mkdir -p .revision

      - name: Get plugin version from WordPress site
        id: get-plugin-version
        run: |
          plugin_slug=${{ matrix.plugin }}
          response=$(curl -s "https://gflistener.instawp.xyz/wp-json/checkview/v1/plugin-version?_plugin_slug=$plugin_slug")
          plugin_version=$(echo $response | jq -r '.version')

          if [ "$plugin_version" == "null" ] || [ -z "$plugin_version" ]; then
            echo "Plugin version not found for $plugin_slug"
            exit 1
          else
            echo "Plugin version for $plugin_slug is $plugin_version"
            echo "plugin_version=$plugin_version" >> $GITHUB_ENV

            # Save the plugin version to the current revision file
            current_revision_file=".revision/${plugin_slug}_current_revision_gravityforms.txt"
            echo "$plugin_version" > "$current_revision_file"
          fi

      - name: Get previous plugin version
        id: get-previous
        run: |
          plugin_slug=${{ matrix.plugin }}
          previous_revision_file=".revision/${plugin_slug}_latest_revision_gravityforms.txt"
          if [ -f "$previous_revision_file" ]; then
            previous_revision=$(cat "$previous_revision_file")
          else
            previous_revision="0"
          fi
          echo "previous_revision=$previous_revision" >> $GITHUB_ENV

      - name: Compare revisions
        id: compare-revisions
        run: |
          current_revision=$(cat ".revision/${{ matrix.plugin }}_current_revision_gravityforms.txt")
          previous_revision=${{ env.previous_revision }}

          echo "Current revision: $current_revision"
          echo "Previous revision: $previous_revision"

          if [ "$current_revision" != "$previous_revision" ]; then
            echo "${{ matrix.plugin }}_update_found=true" >> $GITHUB_ENV
          else
            echo "${{ matrix.plugin }}_update_found=false" >> $GITHUB_ENV
          fi

      - name: Save current revision as latest revision
        if: env.${{ matrix.plugin }}_update_found == 'true'
        run: |
          plugin_slug=${{ matrix.plugin }}
          current_revision_file=".revision/${plugin_slug}_current_revision_gravityforms.txt"
          latest_revision_file=".revision/${plugin_slug}_latest_revision_gravityforms.txt"
          cp "$current_revision_file" "$latest_revision_file"

      - name: Commit updated revision file
        if: env.${{ matrix.plugin }}_update_found == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          plugin_name=${{ matrix.plugin }}

          # Stash any unstaged changes before pulling
          git stash --include-untracked

          # Pull the latest changes from the remote branch with rebase
          git pull --rebase origin main

          # Apply the stashed changes back after the pull
          git stash pop || echo "No changes to apply from stash"

          # Add the updated revision file
          git add ".revision/${plugin_name}_latest_revision_gravityforms.txt"

          # Commit the changes if there are any
          if ! git diff-index --quiet HEAD; then
            git commit -m "Update $plugin_name SVN revision"
            # Push the changes
            git push
          else
            echo "No changes to commit"
          fi
            
      - name: Create Gravity Forms & hCaptcha native Site for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.gf-hcaptcha_update_found == 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity--hcaptcha-third-party
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template

      - name: Create Gravity Forms & hCaptcha  Site for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.hcaptcha-for-forms-and-more_update_found == 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity--hcaptcha-third-party
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template

      - name: Create Gravity Forms Trusntile 3rd party for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.simple-cloudflare-turnstile_update_found == 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity-forms--turnstile-third-party
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template

      - name: Create Gravity Forms Trusntile native for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.turnstile_update_found == 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity-forms--cloudflare-turnstile-3p
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template
            
      - name: Create Gravity Forms With Akismet Site for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.akismet_update_found== 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity-forms--akismet
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template

      - name: Create Gravity Forms With ReCaptcha v3 Native Site for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.recaptcha_update_found == 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity-forms--recaptcha-v3
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template

      - name: Create Gravity Forms With ReCaptcha v2 Native Site for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.recaptcha_update_found == 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity-forms--recaptcha-v2
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template  
            
      - name: Create Gravity Forms With Zero Spam Site for Testing in InstaWP
        if: ${{ ( steps.compare-revisions.outputs.gravityforms_update_found == 'true' ) || ( steps.compare-revisions.outputs.gravityforms-zero-spam_update_found == 'true' ) }}
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity-forms--zero-spam
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template 


      - name: Create Gravity Forms Site for Testing in InstaWP
        if: steps.compare-revisions.outputs.gravityforms_update_found == 'true'
        uses: instawp/wordpress-testing-automation@main
        with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            INSTAWP_TOKEN: ${{ secrets.INSTAWP_TOKEN }}
            INSTAWP_TEMPLATE_SLUG: gravity-forms
            REPO_ID: 521
            EXPIRY_HOURS: 1
            INSTAWP_ACTION: create-site-template